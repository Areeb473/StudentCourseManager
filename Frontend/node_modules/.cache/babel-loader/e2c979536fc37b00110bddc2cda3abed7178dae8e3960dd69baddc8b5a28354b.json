{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HYBRID SOLUTION\\\\Desktop\\\\Color Memory\\\\color\\\\Frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst colors = ['#FF5733', '#33FF57', '#3357FF', '#F39C12', '#8E44AD', '#1ABC9C', '#C0392B', '#3498DB'];\nconst shuffledColors = () => {\n  const doubleColors = [...colors, ...colors];\n  return doubleColors.sort(() => Math.random() - 0.5).map((color, i) => ({\n    id: i,\n    color,\n    flipped: false,\n    matched: false\n  }));\n};\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [selected, setSelected] = useState([]);\n  const [moves, setMoves] = useState(0);\n  const [name, setName] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n  const [leaderboard, setLeaderboard] = useState([]);\n  useEffect(() => {\n    setCards(shuffledColors());\n    axios.get('http://localhost:5000/api/scores').then(res => setLeaderboard(res.data));\n  }, []);\n  useEffect(() => {\n    if (selected.length === 2) {\n      const [first, second] = selected;\n      if (cards[first].color === cards[second].color) {\n        const updated = [...cards];\n        updated[first].matched = true;\n        updated[second].matched = true;\n        setCards(updated);\n        setSelected([]);\n      } else {\n        setTimeout(() => {\n          const updated = [...cards];\n          updated[first].flipped = false;\n          updated[second].flipped = false;\n          setCards(updated);\n          setSelected([]);\n        }, 800);\n      }\n      setMoves(prev => prev + 1);\n    }\n    if (cards.length && cards.every(card => card.matched)) {\n      setGameOver(true);\n    }\n  }, [selected]);\n  const handleClick = i => {\n    if (selected.length === 2 || cards[i].flipped || cards[i].matched) return;\n    const updated = [...cards];\n    updated[i].flipped = true;\n    setCards(updated);\n    setSelected([...selected, i]);\n  };\n  const handleSubmitScore = () => {\n    axios.post('http://localhost:5000/api/scores', {\n      name,\n      moves\n    }).then(() => {\n      axios.get('http://localhost:5000/api/scores').then(res => setLeaderboard(res.data));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDFA8 Color Memory Challenge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), !gameOver ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: cards.map((card, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `card ${card.flipped || card.matched ? 'flipped' : ''}`,\n          style: {\n            backgroundColor: card.flipped || card.matched ? card.color : '#ccc'\n          },\n          onClick: () => handleClick(i)\n        }, card.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Moves: \", moves]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameover\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\uD83C\\uDF89 You won in \", moves, \" moves!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter your name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmitScore,\n        children: \"Submit Score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83C\\uDFC6 Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: leaderboard.map((entry, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [entry.name, \" - \", entry.moves, \" moves\"]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HVpqTJyQ4J93sUufRQsNhb/npCU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","colors","shuffledColors","doubleColors","sort","Math","random","map","color","i","id","flipped","matched","App","_s","cards","setCards","selected","setSelected","moves","setMoves","name","setName","gameOver","setGameOver","leaderboard","setLeaderboard","get","then","res","data","length","first","second","updated","setTimeout","prev","every","card","handleClick","handleSubmitScore","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","onClick","placeholder","value","onChange","e","target","entry","idx","_c","$RefreshReg$"],"sources":["C:/Users/HYBRID SOLUTION/Desktop/Color Memory/color/Frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst colors = ['#FF5733', '#33FF57', '#3357FF', '#F39C12', '#8E44AD', '#1ABC9C', '#C0392B', '#3498DB'];\n\nconst shuffledColors = () => {\n  const doubleColors = [...colors, ...colors];\n  return doubleColors.sort(() => Math.random() - 0.5).map((color, i) => ({\n    id: i,\n    color,\n    flipped: false,\n    matched: false,\n  }));\n};\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [selected, setSelected] = useState([]);\n  const [moves, setMoves] = useState(0);\n  const [name, setName] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n  const [leaderboard, setLeaderboard] = useState([]);\n\n  useEffect(() => {\n    setCards(shuffledColors());\n    axios.get('http://localhost:5000/api/scores').then(res => setLeaderboard(res.data));\n  }, []);\n\n  useEffect(() => {\n    if (selected.length === 2) {\n      const [first, second] = selected;\n      if (cards[first].color === cards[second].color) {\n        const updated = [...cards];\n        updated[first].matched = true;\n        updated[second].matched = true;\n        setCards(updated);\n        setSelected([]);\n      } else {\n        setTimeout(() => {\n          const updated = [...cards];\n          updated[first].flipped = false;\n          updated[second].flipped = false;\n          setCards(updated);\n          setSelected([]);\n        }, 800);\n      }\n      setMoves(prev => prev + 1);\n    }\n\n    if (cards.length && cards.every(card => card.matched)) {\n      setGameOver(true);\n    }\n  }, [selected]);\n\n  const handleClick = (i) => {\n    if (selected.length === 2 || cards[i].flipped || cards[i].matched) return;\n    const updated = [...cards];\n    updated[i].flipped = true;\n    setCards(updated);\n    setSelected([...selected, i]);\n  };\n\n  const handleSubmitScore = () => {\n    axios.post('http://localhost:5000/api/scores', { name, moves }).then(() => {\n      axios.get('http://localhost:5000/api/scores').then(res => setLeaderboard(res.data));\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>üé® Color Memory Challenge</h1>\n      {!gameOver ? (\n        <>\n          <div className=\"grid\">\n            {cards.map((card, i) => (\n              <div\n                key={card.id}\n                className={`card ${card.flipped || card.matched ? 'flipped' : ''}`}\n                style={{ backgroundColor: card.flipped || card.matched ? card.color : '#ccc' }}\n                onClick={() => handleClick(i)}\n              />\n            ))}\n          </div>\n          <h2>Moves: {moves}</h2>\n        </>\n      ) : (\n        <div className=\"gameover\">\n          <h2>üéâ You won in {moves} moves!</h2>\n          <input\n            placeholder=\"Enter your name\"\n            value={name}\n            onChange={e => setName(e.target.value)}\n          />\n          <button onClick={handleSubmitScore}>Submit Score</button>\n        </div>\n      )}\n      <h3>üèÜ Leaderboard</h3>\n      <ul>\n        {leaderboard.map((entry, idx) => (\n          <li key={idx}>{entry.name} - {entry.moves} moves</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}