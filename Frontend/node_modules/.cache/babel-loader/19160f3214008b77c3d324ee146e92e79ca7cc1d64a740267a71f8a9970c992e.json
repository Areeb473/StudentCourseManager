{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HYBRID SOLUTION\\\\Desktop\\\\Color Memory Game\\\\Frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardColors = ['#FF5733', '#33FF57', '#3357FF', '#F39C12', '#8E44AD', '#1ABC9C', '#E74C3C', '#2ECC71'];\nconst duplicateAndShuffle = () => {\n  const colors = [...cardColors, ...cardColors];\n  for (let i = colors.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [colors[i], colors[j]] = [colors[j], colors[i]];\n  }\n  return colors.map((color, index) => ({\n    id: index,\n    color,\n    flipped: false,\n    matched: false\n  }));\n};\nfunction App() {\n  _s();\n  const [cards, setCards] = useState(duplicateAndShuffle());\n  const [flipped, setFlipped] = useState([]);\n  const [scores, setScores] = useState({\n    player1: 0,\n    player2: 0\n  });\n  const [currentPlayer, setCurrentPlayer] = useState(1);\n  const [gameOver, setGameOver] = useState(false);\n  const [history, setHistory] = useState([]);\n  useEffect(() => {\n    fetchHistory();\n  }, []);\n  const fetchHistory = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/games');\n      setHistory(res.data);\n    } catch (error) {\n      console.error('❌ Error fetching history:', error);\n    }\n  };\n  const handleCardClick = index => {\n    if (flipped.length === 2 || cards[index].flipped || cards[index].matched) return;\n    const newCards = [...cards];\n    newCards[index].flipped = true;\n    const newFlipped = [...flipped, index];\n    setCards(newCards);\n    setFlipped(newFlipped);\n    if (newFlipped.length === 2) {\n      const [first, second] = newFlipped;\n      if (newCards[first].color === newCards[second].color) {\n        newCards[first].matched = true;\n        newCards[second].matched = true;\n        const updatedScores = {\n          ...scores\n        };\n        updatedScores[`player${currentPlayer}`] += 1;\n        setTimeout(() => {\n          setScores(updatedScores);\n          setCards(newCards);\n          setFlipped([]);\n          checkGameOver(newCards, updatedScores);\n        }, 700);\n      } else {\n        setTimeout(() => {\n          newCards[first].flipped = false;\n          newCards[second].flipped = false;\n          setCards(newCards);\n          setFlipped([]);\n          setCurrentPlayer(currentPlayer === 1 ? 2 : 1);\n        }, 1000);\n      }\n    }\n  };\n  const checkGameOver = async (cards, scores) => {\n    const allMatched = cards.every(card => card.matched);\n    if (allMatched) {\n      setGameOver(true);\n      const result = {\n        player1: \"Player 1\",\n        player2: \"Player 2\",\n        score1: scores.player1,\n        score2: scores.player2,\n        winner: scores.player1 > scores.player2 ? 'Player 1' : scores.player2 > scores.player1 ? 'Player 2' : 'Draw'\n      };\n      try {\n        await axios.post('http://localhost:5000/api/games', result);\n        fetchHistory(); // refresh list\n      } catch (err) {\n        console.error('❌ Error saving result:', err);\n      }\n    }\n  };\n  const resetGame = () => {\n    setCards(duplicateAndShuffle());\n    setFlipped([]);\n    setScores({\n      player1: 0,\n      player2: 0\n    });\n    setCurrentPlayer(1);\n    setGameOver(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-palette\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Color Memory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDFAF Color Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"turn-indicator\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `player ${currentPlayer === 1 ? 'active' : ''}`,\n        children: \"\\uD83C\\uDF88 Player 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `player ${currentPlayer === 2 ? 'active' : ''}`,\n        children: \"\\uD83C\\uDF89 Player 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scores\",\n      children: [\"\\uD83E\\uDDE0 P1: \", scores.player1, \" | P2: \", scores.player2]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card ${card.flipped || card.matched ? 'flipped' : ''}`,\n        style: {\n          backgroundColor: card.flipped || card.matched ? card.color : '#ccc'\n        },\n        onClick: () => handleCardClick(index)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameover\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDF89 Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Winner: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: scores.player1 > scores.player2 ? \"Player 1\" : scores.player2 > scores.player1 ? \"Player 2\" : \"Draw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"\\uD83D\\uDD04 Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDDC2 Game History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: history.map((game, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [game.player1, \" (\", game.score1, \") vs \", game.player2, \" (\", game.score2, \") \\u2192 \\uD83C\\uDFC6 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: game.winner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 85\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2XEDs394o44yB3Xn12903m1l8Hg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","cardColors","duplicateAndShuffle","colors","i","length","j","Math","floor","random","map","color","index","id","flipped","matched","App","_s","cards","setCards","setFlipped","scores","setScores","player1","player2","currentPlayer","setCurrentPlayer","gameOver","setGameOver","history","setHistory","fetchHistory","res","get","data","error","console","handleCardClick","newCards","newFlipped","first","second","updatedScores","setTimeout","checkGameOver","allMatched","every","card","result","score1","score2","winner","post","err","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","onClick","game","_c","$RefreshReg$"],"sources":["C:/Users/HYBRID SOLUTION/Desktop/Color Memory Game/Frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nconst cardColors = [\n  '#FF5733', '#33FF57', '#3357FF', '#F39C12',\n  '#8E44AD', '#1ABC9C', '#E74C3C', '#2ECC71'\n];\n\nconst duplicateAndShuffle = () => {\n  const colors = [...cardColors, ...cardColors];\n  for (let i = colors.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [colors[i], colors[j]] = [colors[j], colors[i]];\n  }\n  return colors.map((color, index) => ({\n    id: index, color, flipped: false, matched: false\n  }));\n};\n\nfunction App() {\n  const [cards, setCards] = useState(duplicateAndShuffle());\n  const [flipped, setFlipped] = useState([]);\n  const [scores, setScores] = useState({ player1: 0, player2: 0 });\n  const [currentPlayer, setCurrentPlayer] = useState(1);\n  const [gameOver, setGameOver] = useState(false);\n  const [history, setHistory] = useState([]);\n\n  useEffect(() => {\n    fetchHistory();\n  }, []);\n\n  const fetchHistory = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/games');\n      setHistory(res.data);\n    } catch (error) {\n      console.error('❌ Error fetching history:', error);\n    }\n  };\n\n  const handleCardClick = (index) => {\n    if (flipped.length === 2 || cards[index].flipped || cards[index].matched) return;\n\n    const newCards = [...cards];\n    newCards[index].flipped = true;\n    const newFlipped = [...flipped, index];\n    setCards(newCards);\n    setFlipped(newFlipped);\n\n    if (newFlipped.length === 2) {\n      const [first, second] = newFlipped;\n      if (newCards[first].color === newCards[second].color) {\n        newCards[first].matched = true;\n        newCards[second].matched = true;\n        const updatedScores = { ...scores };\n        updatedScores[`player${currentPlayer}`] += 1;\n\n        setTimeout(() => {\n          setScores(updatedScores);\n          setCards(newCards);\n          setFlipped([]);\n          checkGameOver(newCards, updatedScores);\n        }, 700);\n      } else {\n        setTimeout(() => {\n          newCards[first].flipped = false;\n          newCards[second].flipped = false;\n          setCards(newCards);\n          setFlipped([]);\n          setCurrentPlayer(currentPlayer === 1 ? 2 : 1);\n        }, 1000);\n      }\n    }\n  };\n\n  const checkGameOver = async (cards, scores) => {\n    const allMatched = cards.every(card => card.matched);\n    if (allMatched) {\n      setGameOver(true);\n\n      const result = {\n        player1: \"Player 1\",\n        player2: \"Player 2\",\n        score1: scores.player1,\n        score2: scores.player2,\n        winner:\n          scores.player1 > scores.player2\n            ? 'Player 1'\n            : scores.player2 > scores.player1\n            ? 'Player 2'\n            : 'Draw'\n      };\n\n      try {\n        await axios.post('http://localhost:5000/api/games', result);\n        fetchHistory(); // refresh list\n      } catch (err) {\n        console.error('❌ Error saving result:', err);\n      }\n    }\n  };\n\n  const resetGame = () => {\n    setCards(duplicateAndShuffle());\n    setFlipped([]);\n    setScores({ player1: 0, player2: 0 });\n    setCurrentPlayer(1);\n    setGameOver(false);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"logo\">\n        <i className=\"fas fa-palette\"></i> <span>Color Memory</span>\n      </div>\n      <h1>🎯 Color Memory Game</h1>\n\n      <div className=\"turn-indicator\">\n        <div className={`player ${currentPlayer === 1 ? 'active' : ''}`}>🎈 Player 1</div>\n        <div className={`player ${currentPlayer === 2 ? 'active' : ''}`}>🎉 Player 2</div>\n      </div>\n\n      <div className=\"scores\">\n        🧠 P1: {scores.player1} | P2: {scores.player2}\n      </div>\n\n      <div className=\"grid\">\n        {cards.map((card, index) => (\n          <div\n            key={card.id}\n            className={`card ${card.flipped || card.matched ? 'flipped' : ''}`}\n            style={{ backgroundColor: card.flipped || card.matched ? card.color : '#ccc' }}\n            onClick={() => handleCardClick(index)}\n          />\n        ))}\n      </div>\n\n      {gameOver && (\n        <div className=\"gameover\">\n          <h2>🎉 Game Over!</h2>\n          <p>Winner: <strong>\n            {scores.player1 > scores.player2\n              ? \"Player 1\"\n              : scores.player2 > scores.player1\n              ? \"Player 2\"\n              : \"Draw\"}\n          </strong></p>\n          <button onClick={resetGame}>🔄 Play Again</button>\n        </div>\n      )}\n\n      <div className=\"history\">\n        <h3>🗂 Game History</h3>\n        <ul>\n          {history.map((game, i) => (\n            <li key={i}>\n              {game.player1} ({game.score1}) vs {game.player2} ({game.score2}) → 🏆 <strong>{game.winner}</strong>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}