{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HYBRID SOLUTION\\\\Desktop\\\\keep Notes\\\\Frontend\\\\src\\\\pages\\\\Notes.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Notes() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [note, setNote] = useState({\n    title: '',\n    content: ''\n  });\n  const [editId, setEditId] = useState(null); // Track note being edited\n\n  const fetchNotes = async () => {\n    const res = await axios.get('http://localhost:5000/api/notes');\n    setNotes(res.data);\n  };\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  const saveNote = async () => {\n    if (!note.title || !note.content) return alert('Both fields required');\n    if (editId) {\n      // Updating existing note\n      await axios.put(`http://localhost:5000/api/notes/${editId}`, note);\n      setEditId(null); // Clear editing mode\n    } else {\n      // Creating new note\n      await axios.post('http://localhost:5000/api/notes', note);\n    }\n    setNote({\n      title: '',\n      content: ''\n    });\n    fetchNotes();\n  };\n  const deleteNote = async id => {\n    await axios.delete(`http://localhost:5000/api/notes/${id}`);\n    fetchNotes();\n  };\n  const editNote = n => {\n    setNote({\n      title: n.title,\n      content: n.content\n    });\n    setEditId(n._id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Keep Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Title\",\n        value: note.title,\n        onChange: e => setNote({\n          ...note,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Content\",\n        value: note.content,\n        onChange: e => setNote({\n          ...note,\n          content: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveNote,\n        children: editId ? 'Update Note' : 'Save Note'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), notes.map(n => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: n.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: n.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => editNote(n),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteNote(n._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, n._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Notes, \"kquqJI12JV/BQ7XUsn0sjpLgAWc=\");\n_c = Notes;\nvar _c;\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Notes","_s","notes","setNotes","note","setNote","title","content","editId","setEditId","fetchNotes","res","get","data","saveNote","alert","put","post","deleteNote","id","delete","editNote","n","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/HYBRID SOLUTION/Desktop/keep Notes/Frontend/src/pages/Notes.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../App.css';\r\n\r\nexport default function Notes() {\r\n  const [notes, setNotes] = useState([]);\r\n  const [note, setNote] = useState({ title: '', content: '' });\r\n  const [editId, setEditId] = useState(null); // Track note being edited\r\n\r\n  const fetchNotes = async () => {\r\n    const res = await axios.get('http://localhost:5000/api/notes');\r\n    setNotes(res.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  const saveNote = async () => {\r\n    if (!note.title || !note.content) return alert('Both fields required');\r\n\r\n    if (editId) {\r\n      // Updating existing note\r\n      await axios.put(`http://localhost:5000/api/notes/${editId}`, note);\r\n      setEditId(null); // Clear editing mode\r\n    } else {\r\n      // Creating new note\r\n      await axios.post('http://localhost:5000/api/notes', note);\r\n    }\r\n\r\n    setNote({ title: '', content: '' });\r\n    fetchNotes();\r\n  };\r\n\r\n  const deleteNote = async (id) => {\r\n    await axios.delete(`http://localhost:5000/api/notes/${id}`);\r\n    fetchNotes();\r\n  };\r\n\r\n  const editNote = (n) => {\r\n    setNote({ title: n.title, content: n.content });\r\n    setEditId(n._id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-center\">\r\n      <div className=\"container\">\r\n        <h2>Keep Notes</h2>\r\n\r\n        <input\r\n          placeholder=\"Title\"\r\n          value={note.title}\r\n          onChange={(e) => setNote({ ...note, title: e.target.value })}\r\n        />\r\n        <input\r\n          placeholder=\"Content\"\r\n          value={note.content}\r\n          onChange={(e) => setNote({ ...note, content: e.target.value })}\r\n        />\r\n        <button onClick={saveNote}>\r\n          {editId ? 'Update Note' : 'Save Note'}\r\n        </button>\r\n\r\n        {notes.map((n) => (\r\n          <div className=\"note\" key={n._id}>\r\n            <h4>{n.title}</h4>\r\n            <p>{n.content}</p>\r\n            <button onClick={() => editNote(n)}>Edit</button>\r\n            <button onClick={() => deleteNote(n._id)}>Delete</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC;IAAEU,KAAK,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC;EAC5D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE5C,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,iCAAiC,CAAC;IAC9DT,QAAQ,CAACQ,GAAG,CAACE,IAAI,CAAC;EACpB,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACde,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI,CAACV,IAAI,CAACE,KAAK,IAAI,CAACF,IAAI,CAACG,OAAO,EAAE,OAAOQ,KAAK,CAAC,sBAAsB,CAAC;IAEtE,IAAIP,MAAM,EAAE;MACV;MACA,MAAMX,KAAK,CAACmB,GAAG,CAAC,mCAAmCR,MAAM,EAAE,EAAEJ,IAAI,CAAC;MAClEK,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,CAAC,MAAM;MACL;MACA,MAAMZ,KAAK,CAACoB,IAAI,CAAC,iCAAiC,EAAEb,IAAI,CAAC;IAC3D;IAEAC,OAAO,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAC,CAAC;IACnCG,UAAU,CAAC,CAAC;EACd,CAAC;EAED,MAAMQ,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC/B,MAAMtB,KAAK,CAACuB,MAAM,CAAC,mCAAmCD,EAAE,EAAE,CAAC;IAC3DT,UAAU,CAAC,CAAC;EACd,CAAC;EAED,MAAMW,QAAQ,GAAIC,CAAC,IAAK;IACtBjB,OAAO,CAAC;MAAEC,KAAK,EAAEgB,CAAC,CAAChB,KAAK;MAAEC,OAAO,EAAEe,CAAC,CAACf;IAAQ,CAAC,CAAC;IAC/CE,SAAS,CAACa,CAAC,CAACC,GAAG,CAAC;EAClB,CAAC;EAED,oBACExB,OAAA;IAAKyB,SAAS,EAAC,aAAa;IAAAC,QAAA,eAC1B1B,OAAA;MAAKyB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxB1B,OAAA;QAAA0B,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEnB9B,OAAA;QACE+B,WAAW,EAAC,OAAO;QACnBC,KAAK,EAAE3B,IAAI,CAACE,KAAM;QAClB0B,QAAQ,EAAGC,CAAC,IAAK5B,OAAO,CAAC;UAAE,GAAGD,IAAI;UAAEE,KAAK,EAAE2B,CAAC,CAACC,MAAM,CAACH;QAAM,CAAC;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC,eACF9B,OAAA;QACE+B,WAAW,EAAC,SAAS;QACrBC,KAAK,EAAE3B,IAAI,CAACG,OAAQ;QACpByB,QAAQ,EAAGC,CAAC,IAAK5B,OAAO,CAAC;UAAE,GAAGD,IAAI;UAAEG,OAAO,EAAE0B,CAAC,CAACC,MAAM,CAACH;QAAM,CAAC;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC,eACF9B,OAAA;QAAQoC,OAAO,EAAErB,QAAS;QAAAW,QAAA,EACvBjB,MAAM,GAAG,aAAa,GAAG;MAAW;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,EAER3B,KAAK,CAACkC,GAAG,CAAEd,CAAC,iBACXvB,OAAA;QAAKyB,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnB1B,OAAA;UAAA0B,QAAA,EAAKH,CAAC,CAAChB;QAAK;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAClB9B,OAAA;UAAA0B,QAAA,EAAIH,CAAC,CAACf;QAAO;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClB9B,OAAA;UAAQoC,OAAO,EAAEA,CAAA,KAAMd,QAAQ,CAACC,CAAC,CAAE;UAAAG,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACjD9B,OAAA;UAAQoC,OAAO,EAAEA,CAAA,KAAMjB,UAAU,CAACI,CAAC,CAACC,GAAG,CAAE;UAAAE,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAJhCP,CAAC,CAACC,GAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAK3B,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC5B,EAAA,CAtEuBD,KAAK;AAAAqC,EAAA,GAALrC,KAAK;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}