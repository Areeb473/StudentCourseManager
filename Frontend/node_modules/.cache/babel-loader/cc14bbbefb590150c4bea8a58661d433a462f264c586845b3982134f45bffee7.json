{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HYBRID SOLUTION\\\\Desktop\\\\Color Memory\\\\color\\\\Frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = ['#FF5733', '#33FF57', '#3357FF', '#F39C12', '#8E44AD', '#1ABC9C', '#C0392B', '#3498DB'];\nconst shuffledColors = () => {\n  const doubleColors = [...colors, ...colors];\n  return doubleColors.sort(() => Math.random() - 0.5).map((color, i) => ({\n    id: i,\n    color,\n    flipped: false,\n    matched: false\n  }));\n};\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [selected, setSelected] = useState([]);\n  const [currentPlayer, setCurrentPlayer] = useState(1);\n  const [scores, setScores] = useState({\n    1: 0,\n    2: 0\n  });\n  const [gameOver, setGameOver] = useState(false);\n  useEffect(() => {\n    setCards(shuffledColors());\n  }, []);\n  useEffect(() => {\n    if (selected.length === 2) {\n      const [first, second] = selected;\n      const isMatch = cards[first].color === cards[second].color;\n      setTimeout(() => {\n        const updated = [...cards];\n        if (isMatch) {\n          updated[first].matched = true;\n          updated[second].matched = true;\n          setScores(prev => ({\n            ...prev,\n            [currentPlayer]: prev[currentPlayer] + 1\n          }));\n        } else {\n          updated[first].flipped = false;\n          updated[second].flipped = false;\n          setCurrentPlayer(prev => prev === 1 ? 2 : 1);\n        }\n        setCards(updated);\n        setSelected([]);\n      }, 800);\n    }\n    if (cards.length && cards.every(card => card.matched)) {\n      setTimeout(() => {\n        setGameOver(true);\n      }, 1000);\n    }\n  }, [selected]);\n  const handleClick = i => {\n    if (selected.length === 2 || cards[i].flipped || cards[i].matched) return;\n    const updated = [...cards];\n    updated[i].flipped = true;\n    setCards(updated);\n    setSelected([...selected, i]);\n  };\n  const getWinner = () => {\n    if (scores[1] > scores[2]) return \"üéâ Player 1 Wins!\";\n    if (scores[2] > scores[1]) return \"üéâ Player 2 Wins!\";\n    return \"ü§ù It's a Tie!\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDFA8 Color Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), !gameOver && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Player \", currentPlayer, \"'s Turn\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scores\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Player 1: \", scores[1], \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" | \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Player 2: \", scores[2]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: cards.map((card, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card ${card.flipped || card.matched ? 'flipped' : ''}`,\n        style: {\n          backgroundColor: card.flipped || card.matched ? card.color : '#ccc'\n        },\n        onClick: () => handleClick(i)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameover\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: getWinner()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kAtBB86LAu62Of8FFQdR3Z57hvs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","colors","shuffledColors","doubleColors","sort","Math","random","map","color","i","id","flipped","matched","App","_s","cards","setCards","selected","setSelected","currentPlayer","setCurrentPlayer","scores","setScores","gameOver","setGameOver","length","first","second","isMatch","setTimeout","updated","prev","every","card","handleClick","getWinner","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","onClick","window","location","reload","_c","$RefreshReg$"],"sources":["C:/Users/HYBRID SOLUTION/Desktop/Color Memory/color/Frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst colors = ['#FF5733', '#33FF57', '#3357FF', '#F39C12', '#8E44AD', '#1ABC9C', '#C0392B', '#3498DB'];\n\nconst shuffledColors = () => {\n  const doubleColors = [...colors, ...colors];\n  return doubleColors.sort(() => Math.random() - 0.5).map((color, i) => ({\n    id: i,\n    color,\n    flipped: false,\n    matched: false,\n  }));\n};\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [selected, setSelected] = useState([]);\n  const [currentPlayer, setCurrentPlayer] = useState(1);\n  const [scores, setScores] = useState({ 1: 0, 2: 0 });\n  const [gameOver, setGameOver] = useState(false);\n\n  useEffect(() => {\n    setCards(shuffledColors());\n  }, []);\n\n  useEffect(() => {\n    if (selected.length === 2) {\n      const [first, second] = selected;\n      const isMatch = cards[first].color === cards[second].color;\n\n      setTimeout(() => {\n        const updated = [...cards];\n        if (isMatch) {\n          updated[first].matched = true;\n          updated[second].matched = true;\n          setScores(prev => ({ ...prev, [currentPlayer]: prev[currentPlayer] + 1 }));\n        } else {\n          updated[first].flipped = false;\n          updated[second].flipped = false;\n          setCurrentPlayer(prev => (prev === 1 ? 2 : 1));\n        }\n        setCards(updated);\n        setSelected([]);\n      }, 800);\n    }\n\n    if (cards.length && cards.every(card => card.matched)) {\n      setTimeout(() => {\n        setGameOver(true);\n      }, 1000);\n    }\n  }, [selected]);\n\n  const handleClick = (i) => {\n    if (selected.length === 2 || cards[i].flipped || cards[i].matched) return;\n    const updated = [...cards];\n    updated[i].flipped = true;\n    setCards(updated);\n    setSelected([...selected, i]);\n  };\n\n  const getWinner = () => {\n    if (scores[1] > scores[2]) return \"üéâ Player 1 Wins!\";\n    if (scores[2] > scores[1]) return \"üéâ Player 2 Wins!\";\n    return \"ü§ù It's a Tie!\";\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>üé® Color Memory Game</h1>\n      {!gameOver && <h2>Player {currentPlayer}'s Turn</h2>}\n      <div className=\"scores\">\n        <span>Player 1: {scores[1]} </span>\n        <span> | </span>\n        <span>Player 2: {scores[2]}</span>\n      </div>\n      <div className=\"grid\">\n        {cards.map((card, i) => (\n          <div\n            key={card.id}\n            className={`card ${card.flipped || card.matched ? 'flipped' : ''}`}\n            style={{ backgroundColor: card.flipped || card.matched ? card.color : '#ccc' }}\n            onClick={() => handleClick(i)}\n          />\n        ))}\n      </div>\n      {gameOver && (\n        <div className=\"gameover\">\n          <h2>{getWinner()}</h2>\n          <button onClick={() => window.location.reload()}>Play Again</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}